# Generated by Django 4.2 on 2024-09-13 07:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('leaverequestsapi', '0003_delete_leaverequest'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_id', models.CharField(max_length=10)),
                ('emp_name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('status', models.TextField()),
            ],
            options={
                'db_table': 'daily_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('department_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('manager_name', models.CharField(blank=True, max_length=50, null=True)),
                ('manager_email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('emp_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('department', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'employees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_id', models.CharField(max_length=10)),
                ('leave_date', models.DateField()),
                ('leave_reason', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('email_body', models.TextField(blank=True, null=True)),
                ('leave_duration', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'leave_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveTracking',
            fields=[
                ('emp', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='leaverequestsapi.employees')),
                ('total_annual', models.IntegerField()),
                ('annual_consumed', models.IntegerField(blank=True, null=True)),
                ('annual_remaining', models.IntegerField(blank=True, null=True)),
                ('total_sick', models.IntegerField(blank=True, null=True)),
                ('sick_consumed', models.IntegerField(blank=True, null=True)),
                ('total_casual', models.IntegerField(blank=True, null=True)),
                ('casual_consumed', models.IntegerField(blank=True, null=True)),
                ('sick_remaining', models.IntegerField(blank=True, null=True)),
                ('casual_remaining', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'leave_tracking',
                'managed': False,
            },
        ),
    ]
